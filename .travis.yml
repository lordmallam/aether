sudo: required
language: python
python:
  - '3.6'

services:
  - docker


# use matrix to parallelize tests
matrix:
  fast_finish: true
  include:
    # - name: "Aether CORE tests (Kernel, Client, UI, ODK and CouchDB-Sync)"
    #   stage: test
    #   env: 'TEST_MODE=all'

    # split containers one by one
    # - name: "Aether Kernel tests"
    #   stage: test
    #   env: 'TEST_MODE=kernel'

    # - name: "Aether Client tests"
    #   stage: test
    #   env: 'TEST_MODE=client'

    # - name: "Aether ODK module tests"
    #   stage: test
    #   env: 'TEST_MODE=odk'

    # - name: "Aether CouchDB-Sync module tests"
    #   stage: test
    #   env: 'TEST_MODE=couchdb-sync'

    # - name: "Aether UI tests"
    #   stage: test
    #   env: 'TEST_MODE=ui'

    # - name: "Integration tests (Kernel with Kakfa/Zookeeper and Producer)"
    #   stage: test
    #   env: 'TEST_MODE=integration'

    #  - name: "Kubernetes tests (Kernel and ODK)"
    #    stage: test
    #    env: 'TEST_MODE=kubernetes'

    # execute only to deploy
    - name: "Aether release"
      stage: deploy
      script: ./scripts/release.sh


install: true

before_script:
  - ./scripts/generate-docker-compose-credentials.sh > .env

script:
  - ./scripts/test_travis.sh $TEST_MODE

after_script:
  - ./scripts/kill_all.sh

after_failure:
  - ./scripts/test_travis_failure.sh $TEST_MODE

# TODO: move this secured global env var to Travis settings
env:
  global:
    secure: PmbhrEFpSypsToBPSTPOxPPgzr6YM+kpFutHn9WJm5VNicukhstPSxo5q4nZ6wrHL+8C3GsJjVMA+YEg2r8kU9w/uEFwJYn4irEWivKwAdglhZLIyfXmhPbBSHoPvDFfAp7mIvX57QOuKvw/ZA22zgsFN3Di9b5VPN6khYwALpAsEJb9qj8UewPfFbcJBhR9l01ZTOcnN27vT6rlCA+WKleViYjMvO8Ru+1H/sOSFEJYA9SRroa2fc8N249tM7MNt9NmDBilOSai98TujHMcgvPM6n1D0YFjqAm6KyvQpW3QdNF5mfhzJVFM48SpsQpzE2xMDeU+NBtYmUV1BgdJcv56qC88NUtOxtK3oQ3NN2l5XyJnLLM3R5zGHyCZ1AOc8w0y8Bn7yYElTwMXAMnsNzuWE+fXR7MJjVIoDkvgmAfnDvDpOwPNC2P/6DDu5doQvdkM//hNGvxlbGnYsoTLBKuFWwy84YXs3ACSFHtKUMf+/yBsVWJ3Nqe/YCMt1052sd7cumjcgyCQNu0xNv6DRoPqNTnqmWzHHROp8DShGEGG+6k8QD2l14thedV7o/esSKSYBKlkcDt1+4F+VKGYKq5jEtMu8dLELoZ1ldZLWNmyYi81FkA+c5BXHOh+ixTkoamqZ1pkyCF0Q82V9wGkVZh+BJxwYb+9tcWy8Yw/llw=
  matrix:
    secure: jAZIO+dYX3IZ97yBjZkH3QisglOPvJ/lU2NZJAc5FI/qQ+dnkn3jvq9jZe19cuhXFDtwF4Fo4FfebsFNgWIc+5B0/z/IZitdzXIxCGE3NplGdWVW3lqgZW8hjGZFDXLNi5W4fEAYDDVFpKchYMmIsxAZdsMmJ+kw1rROgFFd+nF3bDrIWvbdBM+vRyTNyXIRzZlDAEfvZOKyi1VqQSr0yY5W7V4oz9C1zs4TbkOVLXmax8mbpTWnhRUJALRob/ZvROVPQEw3Cj6WQMS38/Qh7vzi3mZkxHzJ4qBzHdju2dQ/YZd7Emj7sZxYo3GR6UIxDpUAlJGtMlXcYKV5GyKiAhNspPS+Do84xXnPWjUjASoxif3C4yIn7CqzjSQDlfeRYCbzyyvBesK//dKs3C5FvMLpNRB8faWwCw5bP+uyRF7zRtS7tYO4FdLg2TM96YuWMVBfGNw80b4ZqV7t1ePvAHsITYjsw09g9JSlBWvc6v2nUE4yvOczpickp+iPY/4OE8IlE3vb9qmepoWPbWR4Oq6TPJSk6VdgxDFuhdvo+BPHidRwg9Pt/aVqEtkLVA9znpMO/WvrvuqfQ+tpvT0GCy9I4L5Krda0gBEJOtNPyC2dxEwc9gKHKqFKgHjx4vScrsocCHcW4HepS4oHXdzzWSl/ynzRUmmbYmhudHzn/2A=
